>>> bg = BaseGeometry()

>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("my_int", 12)

test value of string
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  File "C:\Users\DELL 3550\AppData\Roaming\JetBrains\PyCharmCE2023.1\scratches\tester.2.py", line 34, in <module>
    bg.integer_validator("name", "John")
  File "C:\Users\DELL 3550\AppData\Roaming\JetBrains\PyCharmCE2023.1\scratches\tester.2.py", line 24, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: name must be an integer

test value of negative
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
  File "C:\Users\DELL 3550\AppData\Roaming\JetBrains\PyCharmCE2023.1\scratches\tester.2.py", line 34, in <module>
    bg.integer_validator("distance", -4)
  File "C:\Users\DELL 3550\AppData\Roaming\JetBrains\PyCharmCE2023.1\scratches\tester.2.py", line 26, in integer_validator
    raise TypeError("{} must be greater than 0".format(name))
TypeError: distance must be greater than 0

test value of zero
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
  File "C:\Users\DELL 3550\AppData\Roaming\JetBrains\PyCharmCE2023.1\scratches\tester.2.py", line 34, in <module>
    bg.integer_validator("distance", -4)
  File "C:\Users\DELL 3550\AppData\Roaming\JetBrains\PyCharmCE2023.1\scratches\tester.2.py", line 26, in integer_validator
    raise TypeError("{} must be greater than 0".format(name))
TypeError: distance must be greater than 0
